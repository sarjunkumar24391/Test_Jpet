<project name="JPetStore" default="all" basedir=".">

  <property name="web" value="web"/>
    <property name="src" value="src"/>
      <property name="test" value="test"/>
        <property name="lib" value="lib"/>
          <property name="devlib" value="devlib"/>

  <property name="wars" value="wars"/>
    <property name="warfile" value="${wars}/jpetstore.war"/>

  <property name="webapp" value="webapp"/>
    <property name="weblib" value="${webapp}/WEB-INF/lib/"/>
      <property name="webclasses" value="${webapp}/WEB-INF/classes/"/>

  <property name="reports" value="reports"/>
    <property name="junitreports" value="${reports}/junit/"/>
      <property name="coveragereports" value="${reports}/coverage/"/>

  <property name="work" value="work"/>
    <property name="classes" value="${work}/classes/"/>
      <property name="testclasses" value="${work}/testclasses/"/>
        <property name="instrumentedclasses" value="${work}/instrumentedclasses/"/>

  <path id="classpath">
      <pathelement location="${instrumentedclasses}"/>
          <pathelement location="${classes}"/>
              <pathelement location="${testclasses}"/>
                  <pathelement location="${src}"/>
                      <pathelement location="${test}"/>
                          <fileset dir="${lib}" includes="**/*.jar"/>
                              <fileset dir="${devlib}" includes="**/*.jar"/>
                                </path>

  <taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask"/>
    <taskdef resource="emma_ant.properties" classpathref="classpath"/>

  <target name="clean">
      <delete dir="${reports}"/>
          <delete dir="${work}"/>
              <delete dir="${wars}"/>
                  <delete dir="${webapp}"/>
                      <delete file="coverage.ec"/>
                          <delete>
                                <fileset dir="${src}">
                                        <include name="**/*.class"/>
                                              </fileset>
                                                  </delete>
                                                      <delete>
                                                            <fileset dir="${test}">
                                                                    <include name="**/*.class"/>
                                                                          </fileset>
                                                                              </delete>
                                                                                </target>

  <target name="prepare" depends="clean">
      <mkdir dir="${classes}"/>
          <mkdir dir="${testclasses}"/>
              <mkdir dir="${instrumentedclasses}"/>

    <mkdir dir="${junitreports}"/>
        <mkdir dir="${coveragereports}"/>

    <mkdir dir="${webclasses}"/>
        <mkdir dir="${weblib}"/>

    <mkdir dir="${wars}"/>
      </target>

  <target name="compile" depends="prepare">
      <javac srcdir="${src}" destdir="${classes}" deprecation="on" debug="on">
            <classpath refid="classpath"/>
                </javac>
                    <javac srcdir="${test}" destdir="${testclasses}" deprecation="on" debug="on">
                          <classpath refid="classpath"/>
                              </javac>
                                </target>

  <target name="coverage.instrument" depends="compile">
      <emma enabled="yes">
            <instr instrpath="${classes}"
                    destdir="${instrumentedclasses}"
                            metadatafile="./coverage.ec"
                                    merge="true"
                                            >
                                                  </instr>
                                                      </emma>
                                                        </target>

  <target name="test" depends="coverage.instrument">
      <junit printsummary="yes" haltonfailure="no">
            <classpath refid="classpath"/>

      <formatter type="xml"/>
      	  <jvmarg value="-XX:-UseSplitVerifier"/>
      	        <batchtest fork="yes" todir="${junitreports}">
      	                <fileset dir="${test}">
      	                          <include name="**/*Test*.java"/>
      	                                    <exclude name="**/AllTests.java"/>
      	                                            </fileset>
      	                                                  </batchtest>
      	                                                      </junit>
      	                                                        </target>

  <target name="test.report" depends="test" >
      <junitreport todir="${junitreports}">
            <fileset dir="${junitreports}">
                    <include name="TEST-*.xml"/>
                          </fileset>
                                <report format="frames" todir="${junitreports}"/>
                                    </junitreport>
                                      </target>

  <target name="coverage.report" depends="test" >
      <emma enabled="yes">
            <report sourcepath="${src}"
                    sort="+block,+name,+method,+class"
                            metrics="method:70,block:80,line:80,class:100"
                                    >
                                            <fileset dir="./">
                                                      <include name="*.ec"/>
                                                              </fileset>
                                                                      <html outfile="${coveragereports}/coverage.html"
                                                                                depth="method"
                                                                                          columns="name,class,method,block,line"
                                                                                                    />
                                                                                                          </report>
                                                                                                              </emma>
                                                                                                                </target>

  <target name="assemble" depends="test">
      <copy todir="${webclasses}">
            <fileset dir="${src}">
                    <exclude name="**/*.java"/>
                            <exclude name="**/*.class"/>
                                  </fileset>
                                      </copy>
                                          <copy todir="${webclasses}">
                                                <fileset dir="${classes}"/>
                                                    </copy>
                                                        <copy todir="${weblib}">
                                                              <fileset dir="${lib}"/>
                                                                  </copy>
                                                                      <copy todir="${webapp}">
                                                                            <fileset dir="${web}"/>
                                                                                </copy>
                                                                                  </target>

  <target name="assembleWebapp">
      <copy todir="${webapp}">
            <fileset dir="${web}"/>
                </copy>
                  </target>

  <target name="war" depends="assemble">
      <jar jarfile="${warfile}">
            <fileset dir="${webapp}">
                    <include name="**/*"/>
                          </fileset>
                              </jar>
                                </target>

<taskdef name="findbugs"  classpath="/opt/findbugs-3.0.1/lib/findbugs-ant.jar" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>
<target name="findbugs" depends="war">
<findbugs home="/opt/findbugs-3.0.1/lib" output="xml" outputFile="findbugs.xml" >
<sourcePath path="${src}" />
<class location="${work}/classes/" />
</findbugs>
</target>

<taskdef resource="checkstyletask.properties"  classpath="/opt/checkstyle-6.1.1/checkstyle-6.1.1-all.jar"/>
<target name="checkstyle" description="Generates a report of code convention violations.">
<checkstyle config="/opt/checkstyle-6.1.1/sun_checks.xml"  failOnViolation="false">
<formatter type="xml" tofile="checkstyle_report.xml"/>
<fileset dir="src" includes="**/*.java"/>
</checkstyle>
</target>




<target name="pmd">
    <taskdef name="pmd" classpath="/opt/pmd-bin-5.0.5/lib/*.jar" classname="net.sourceforge.pmd.ant.PMDTask"/>
              <pmd rulesetfiles="/opt/pmd-bin-5.0.5/docs/rules/java/design.xml">  
              <formatter type="html" toFile="foo.html"/>
                        <fileset dir="src">
                                    <include name="**/*.java"/>
                                            </fileset>
                                                </pmd>
                                                </target>



<target name="all" depends="test.report, coverage.report, war"/>

</project>

